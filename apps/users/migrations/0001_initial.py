# Generated by Django 4.1.5 on 2023-02-18 02:43

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_image', models.ImageField(upload_to='profile_image/', verbose_name='Фотография профиля')),
                ('user_or_organization', models.CharField(choices=[('Пользователь', 'Пользователь'), ('Организация', 'Организация')], max_length=100, verbose_name='Выбор аккаунта')),
                ('is_premium', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='JobType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Тип места работы')),
            ],
            options={
                'verbose_name': 'Тип места работ',
                'verbose_name_plural': 'Типы места работы',
            },
        ),
        migrations.CreateModel(
            name='TypeEmployment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Тип занятости')),
            ],
            options={
                'verbose_name': 'Тип занятости',
                'verbose_name_plural': 'Типы занятости',
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Например: менеджер по продажам', max_length=200, verbose_name='Название')),
                ('name_company', models.CharField(max_length=100, verbose_name='Название компании')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Местоположение')),
                ('date_start', models.DateField(verbose_name='Дата начала')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('description', models.TextField(verbose_name='Описание')),
                ('job_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.jobtype', verbose_name='Тип работы')),
                ('type_of_employment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.typeemployment', verbose_name='Тип занятости')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_work_experience', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Опыт работы',
                'verbose_name_plural': 'Опыт работы',
            },
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=100, verbose_name='Название навыка')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_skill', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Навык',
                'verbose_name_plural': 'Навыки',
            },
        ),
        migrations.CreateModel(
            name='Premium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(verbose_name='Начало')),
                ('end', models.DateTimeField(verbose_name='Конец')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_premiums', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('educational_institution', models.CharField(max_length=255, verbose_name='Учебное заведение')),
                ('degree', models.CharField(blank=True, max_length=100, null=True, verbose_name='Степень')),
                ('specialization', models.CharField(blank=True, max_length=100, null=True, verbose_name='Специализация')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='Год окончания (или ожидаемый)')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_education', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образовании',
            },
        ),
        migrations.CreateModel(
            name='UserContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_contact', models.BooleanField(default=False)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_user_contact', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_user_contact', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
                'unique_together': {('from_user', 'to_user')},
            },
        ),
    ]
